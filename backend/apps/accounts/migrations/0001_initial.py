# Generated by Django 4.1 on 2022-09-05 15:53

import apps.accounts.models
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True, max_length=254, unique=True, verbose_name="Email address"
                    ),
                ),
                ("is_active", models.BooleanField(default=False, verbose_name="Is active")),
                ("is_staff", models.BooleanField(default=False, verbose_name="Has admin rights")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(db_index=True, max_length=127, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(db_index=True, max_length=127, verbose_name="Last Name"),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(
                                limit_value=datetime.date.today
                            )
                        ],
                        verbose_name="Birth date",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        default="O",
                        max_length=1,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "address",
                    models.CharField(blank=True, max_length=255, null=True, verbose_name="Address"),
                ),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region=None, unique=True, verbose_name="Phone number"
                    ),
                ),
                (
                    "avatar_image",
                    versatileimagefield.fields.VersatileImageField(
                        blank=True,
                        null=True,
                        upload_to="profile_images/",
                        verbose_name="Avatar picture",
                    ),
                ),
                (
                    "linkedin_url",
                    models.URLField(
                        blank=True, max_length=255, null=True, verbose_name="LinkedIn profile"
                    ),
                ),
                (
                    "telegram_username",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        validators=[apps.accounts.models.TelegramUsernameValidator()],
                        verbose_name="Telegram username",
                    ),
                ),
                (
                    "additional_info",
                    models.TextField(
                        blank=True, max_length=1000, null=True, verbose_name="Additional Info"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Date created"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Date updated")),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Profile",
                "verbose_name_plural": "Profiles",
                "ordering": ("first_name", "last_name"),
            },
        ),
    ]
